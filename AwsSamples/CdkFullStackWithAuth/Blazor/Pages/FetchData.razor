@page "/fetchdata"
@using Common.Models
@using Common.Dto
@using Common.Constants
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>
<p>This component demonstrates fetching data from the server.</p>

@if (_forecasts == null)
{
  <p>@_message</p>
}
else
{
  <table class="table">
    <thead>
    <tr>
      <th>Date</th>
      <th>Temp. (C)</th>
      <th>Temp. (F)</th>
      <th>Summary</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var forecast in _forecasts)
    {
      <tr>
        <td>@forecast.Date.ToShortDateString()</td>
        <td>@forecast.TemperatureC</td>
        <td>@forecast.TemperatureF</td>
        <td>@forecast.Summary</td>
      </tr>
    }
    </tbody>
  </table>
}

@code {
  private List<WeatherForecastModel>? _forecasts;
  private string? _message;

  protected override async Task OnInitializedAsync()
  {
    try
    {
      var response = await Http.GetFromJsonAsync<WeatherForecastGetDto>(ApiPath.WeatherForecastRoot);
      _forecasts = response?.Data;
    }
    catch (Exception e)
    {
      _message = e.Message;
    }
  }

}
