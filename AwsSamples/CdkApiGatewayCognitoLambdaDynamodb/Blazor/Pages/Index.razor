@page "/"
@using System.Web
@using System.Net.Http.Headers
@using Blazor.Helpers
@inject AppSettings AppSettings
@inject NavigationManager NavigationManager

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>
<p>Welcome to your new app.</p>

<div class="row">
  <div class="col-4">
    <p>API Address: @AppSettings.ApiBaseAddress</p>
    <p>
      <a href="@AppSettings.CognitoHostedUiUrl">Login by Cognito</a>
    </p>
    <dl id="getApiResult">
      <dt>API Address</dt>
      <dd>
        <input class="w-100" id="apiAddress" @bind="AppSettings.ApiBaseAddress">
      </dd>
      <dt>Access Token</dt>
      <dd>
        <input class="w-100" id="accessToken" @bind="@AccessToken">
      </dd>
    </dl>
    <button id="getTokenAsync" class="btn btn-outline-primary" @onclick="GetResultAsync">Get Result</button>
  </div>
  <div class="col-4">
    <dl>
      <dt>GET Result</dt>
      <dd>@_getResult</dd>
    </dl>
  </div>
</div>

@code{
  private string _getResult = "Now loading...";

  [Parameter]
  public string? AccessToken { get; set; }

  protected override void OnInitialized()
  {
  // URIは`http://hostname/#idtoken=hoge&access_token=hoge`の形式で来るため、無理やり分割してパラメータを取得する
    var uri = new Uri(NavigationManager.Uri);
    var queryParameters = uri.ToString().Split("#");
    if (queryParameters.Length == 1) return;
    var query = uri.ToString().Split("#")[1];
    var parameters = HttpUtility.ParseQueryString(query);
    AccessToken = parameters["access_token"];
  }

  private async Task GetResultAsync()
  {
    if (AccessToken == string.Empty) return;
    try
    {
      using var client = new HttpClient();
      client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", AccessToken);
      var response = await client.GetAsync(AppSettings.ApiBaseAddress);
      if (response.IsSuccessStatusCode)
      {
        var responseData = await response.Content.ReadAsStringAsync();
        _getResult = responseData;
      }
      else
      {
        _getResult = $"Error: {response.StatusCode}";
      }
    }
    catch (Exception e)
    {
      Console.WriteLine(e);
      _getResult = $"Error: {e.Message}";
      _getResult = _getResult + Environment.NewLine + e.StackTrace;
    }
  }
}