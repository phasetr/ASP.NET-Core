@page "/login"
@using BlazorWasmAuth.Identity
@inject IAccountManagement Acct

<PageTitle>Login</PageTitle>

<h1>Login</h1>

<AuthorizeView>
  <Authorized>
    <div class="alert alert-success">You're logged in as @context.User.Identity?.Name.</div>
  </Authorized>
  <NotAuthorized>
    @if (_errors)
    {
      @foreach (var error in _errorList)
      {
        <div class="alert alert-danger">@error</div>
      }
    }
    <div class="flex-outer">
      <div>
        <label for="email">
          Email:
        </label>
        <input required id="email" name="emailInput" placeholder="Enter your email address" type="email" @bind-value="_email"/>
      </div>
      <div>
        <label for="password">
          Password:
        </label>
        <input required id="password" name="passwordInput" placeholder="Enter your password" type="password" @bind-value="_password"/>
      </div>
      <div>
        <button class="btn btn-primary" @onclick="DoLoginAsync">Login</button>
      </div>
    </div>
  </NotAuthorized>
</AuthorizeView>

@code {
  private bool _success, _errors;
  private string _email = string.Empty;
  private string _password = string.Empty;
  private string[] _errorList = [];

  private async Task DoLoginAsync()
  {
    _success = _errors = false;
    _errorList = [];

    if (string.IsNullOrWhiteSpace(_email))
    {
      _errors = true;
      _errorList = ["Email is required."];
      return;
    }

    if (string.IsNullOrWhiteSpace(_password))
    {
      _errors = true;
      _errorList = ["Password is required."];
      return;
    }

    var result = await Acct.LoginAsync(_email, _password);

    if (result.Succeeded)
    {
      _success = true;
      _email = _password = string.Empty;
    }
    else
    {
      _errors = true;
      _errorList = result.ErrorList;
    }
  }

}
