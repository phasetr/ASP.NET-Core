@page "/quizViewer"
@using BlazorServerAuth0.Data
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@inject QuizService QuizRepository

<h1>Take your quiz!</h1>
<p>Your current score is @_currentScore</p>
@if (_quiz == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    var quizIndex = 0;
    foreach (var quizItem in _quiz)
    {
        <section>
            <h3>@quizItem.Question</h3>
            <div class="form-check">
                @{
                    var choiceIndex = 0;
                    _quizScores.Add(0);

                    foreach (var choice in quizItem.Choices)
                    {
                        var currentQuizIndex = quizIndex;
                        <text><input class="form-check-input" type="radio" name="@quizIndex" value="@choiceIndex" @onchange="@(eventArgs => UpdateScore(Convert.ToInt32(eventArgs.Value), currentQuizIndex))"/>@choice<br></text>
                        choiceIndex++;
                    }
                }
            </div>
        </section>
        quizIndex++;
    }
}

@code {
    List<QuizItem>? _quiz;
    readonly List<int> _quizScores = [];
    int _currentScore;

    protected override async Task OnInitializedAsync()
    {
        _quiz = await QuizService.GetQuizAsync();
    }

    void UpdateScore(int chosenAnswerIndex, int quizIndex)
    {
        if (_quiz != null)
        {
            var quizItem = _quiz[quizIndex];

            if (chosenAnswerIndex == quizItem.AnswerIndex)
            {
                _quizScores[quizIndex] = quizItem.Score;
            }
            else
            {
                _quizScores[quizIndex] = 0;
            }
        }

        _currentScore = _quizScores.Sum();
    }

}
