@page "/quizViewer"
@attribute [Authorize]

@using BlazorServerAuth0.Data
@using Microsoft.AspNetCore.Authorization
@inject QuizService QuizRepository

<h1>Take your quiz!</h1>
<p>Your current score is @_currentScore</p>
@{
    {
        var quizIndex = 0;
        foreach (var quizItem in quiz)
        {
            <section>
                <h3>@quizItem.Question</h3>
                <div class="form-check">
                    @{
                        int choiceIndex = 0;
                        _quizScores.Add(0);

                        foreach (var choice in quizItem.Choices)
                        {
                            int currentQuizIndex = quizIndex;
                            <text><input class="form-check-input" type="radio" name="@quizIndex" value="@choiceIndex" @onchange="@((eventArgs) => UpdateScore(Convert.ToInt32(eventArgs.Value), currentQuizIndex))"/>@choice<br></text>

                            choiceIndex++;
                        }
                    }
                </div>
            </section>

            quizIndex++;
        }
    }
}

@code {
    List<QuizItem> quiz;
    readonly List<int> _quizScores = [];
    int _currentScore = 0;

    protected override async Task OnInitializedAsync()
    {
        quiz = await QuizRepository.GetQuizAsync();
    }

    void UpdateScore(int chosenAnswerIndex, int quizIndex)
    {
        var quizItem = quiz[quizIndex];

        if (chosenAnswerIndex == quizItem.AnswerIndex)
        {
            _quizScores[quizIndex] = quizItem.Score;
        } else
        {
            _quizScores[quizIndex] = 0;
        }
        _currentScore = _quizScores.Sum();
    }
}
