@page
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model LoginModel

<div class="bg-primary text-center text-white p-2">
    <h4>Log In</h4>
</div>

<div class="m-1 text-danger" asp-validation-summary="All"></div>

<form method="post">
    <input type="hidden" name="returnUrl" value="@Model.ReturnUrl"/>
    <div class="form-group">
        <label>UserName</label>
        <input class="form-control" asp-for="UserName"/>
    </div>
    <div class="form-group">
        <label>Password</label>
        <input asp-for="Password" type="password" class="form-control"/>
    </div>
    <button class="btn btn-primary mt-2" type="submit">Log In</button>
</form>

@functions {

    public class LoginModel : PageModel
    {
        private SignInManager<IdentityUser> _signInManager;

        public LoginModel(SignInManager<IdentityUser> signinMgr)
        {
            _signInManager = signinMgr;
        }

        [BindProperty]
        public string UserName { get; set; } = string.Empty;

        [BindProperty]
        public string Password { get; set; } = string.Empty;

        [BindProperty(SupportsGet = true)]
        public string? ReturnUrl { get; set; }

        public async Task<IActionResult> OnPostAsync()
        {
            if (!ModelState.IsValid) return Page();
            var result =
                await _signInManager.PasswordSignInAsync(UserName, Password,
                    false, false);
            if (result.Succeeded)
            {
                return Redirect(ReturnUrl ?? "/admin");
            }
            ModelState.AddModelError("", "Invalid username or password");
            return Page();
        }
    }

}