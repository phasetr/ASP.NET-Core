@page "/quizViewer"
@using QuizManagerClientHosted.Shared
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@attribute [Authorize]
@inject HttpClient Http


<h1>Take your quiz!</h1>
<p>Your current score is @_currentScore</p>

@{
  var quizIndex = 0;
  if (_quiz is not null)
  {
    foreach (var quizItem in _quiz)
    {
      <section>
        <h3>@quizItem.Question</h3>
        <div class="form-check">
          @{
            var choiceIndex = 0;
            _quizScores.Add(0);

            foreach (var choice in quizItem.Choices)
            {
              var currentQuizIndex = quizIndex;
              <input class="form-check-input" type="radio" name="@quizIndex" value="@choiceIndex"
                     @onchange="@(eventArgs => UpdateScore(Convert.ToInt32(eventArgs.Value), currentQuizIndex))"/>
              @choice
              @:<br>

              choiceIndex++;
            }
          }
        </div>
      </section>

      quizIndex++;
    }
  }
}

@code {
  List<QuizItem>? _quiz;
  readonly List<int> _quizScores = new();
  int _currentScore;

  protected override async Task OnInitializedAsync()
  {
    try
    {
      _quiz = await Http.GetFromJsonAsync<List<QuizItem>>("quiz");
    }
    catch (AccessTokenNotAvailableException exception)
    {
      exception.Redirect();
    }
  }

  void UpdateScore(int chosenAnswerIndex, int quizIndex)
  {
    if (_quiz is null || quizIndex < _quiz.Count) return;
    var quizItem = _quiz[quizIndex];

    if (chosenAnswerIndex == quizItem.AnswerIndex)
    {
      _quizScores[quizIndex] = quizItem.Score;
    }
    else
    {
      _quizScores[quizIndex] = 0;
    }
    _currentScore = _quizScores.Sum();
  }

}
