/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/@fluentui/web-components@2.5.9/dist/esm/_docs/design-system/color-explorer/components/color-picker/color-picker.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{__decorate}from"tslib";import{ColorHSV,ColorRGBA64,hsvToRGB,parseColor,rgbToHSV}from"@microsoft/fast-colors";import{attr,DOM,observable}from"@microsoft/fast-element";import{isNullOrWhiteSpace}from"@microsoft/fast-web-utilities";import{FormAssociatedColorPicker}from"./color-picker.form-associated";class ColorPickerUI{constructor(o,t){this.RGBColor=o,this.HSVColor=t,this.HueCSSColor=hsvToRGB(new ColorHSV(this.HSVColor.h,1,1)).toStringHexRGB(),this.HuePosition=this.HSVColor.h/360*100,this.SatValLeftPos=100*this.HSVColor.s,this.SatValTopPos=100-100*this.HSVColor.v,this.AlphaPos=100*this.RGBColor.a}}export class ColorPicker extends FormAssociatedColorPicker{constructor(){super(...arguments),this.mouseActive=!1,this.uiValues=new ColorPickerUI(new ColorRGBA64(1,0,0),new ColorHSV(0,1,1)),this.currentMouseTarget=null}readOnlyChanged(){this.proxy instanceof HTMLElement&&(this.proxy.readOnly=this.readOnly)}autofocusChanged(){this.proxy instanceof HTMLElement&&(this.proxy.autofocus=this.autofocus)}placeholderChanged(){this.proxy instanceof HTMLElement&&(this.proxy.placeholder=this.placeholder)}connectedCallback(){super.connectedCallback(),this.open=!1,this.initColorValues(),this.proxy.setAttribute("type","color"),this.autofocus&&DOM.queueUpdate((()=>{this.focus()}))}handleFocus(){this.initColorValues(),this.open=!0}handleBlur(){this.open=!1}handleTextInput(){this.initialValue=this.control.value,this.isValideCSSColor(this.value)&&(this.currentRGBColor=parseColor(this.value),this.currentHSVColor=rgbToHSV(this.currentRGBColor),this.updateUIValues(!1),this.$emit("change"))}handleMouseDown(o,t){this.currentMouseTarget=t.composedPath()[0],this.currentMouseParam=o,this.updateFromMouseEvent(t.pageX,t.pageY),this.mouseActive=!0}handleMouseMove(o){this.updateFromMouseEvent(o.pageX,o.pageY)}handleMouseUp(o){this.updateFromMouseEvent(o.pageX,o.pageY),this.currentMouseTarget=null,this.currentMouseParam=null,this.mouseActive=!1}handleTextValueInput(o,t){const r=t.composedPath()[0].value;if(isNullOrWhiteSpace(r)||Number.isNaN(r))return;const e=parseInt(r,10);["r","g","b","a"].includes(o)?("a"!==o&&this.isValidRGB(e)||"a"===o&&this.isValidAlpha(e))&&(this.currentRGBColor=new ColorRGBA64("r"===o?e/255:this.currentRGBColor.r,"g"===o?e/255:this.currentRGBColor.g,"b"===o?e/255:this.currentRGBColor.b,"a"===o?e/100:this.currentRGBColor.a),this.currentHSVColor=rgbToHSV(this.currentRGBColor),this.updateUIValues(!0)):["h","s","v"].includes(o)&&("h"!==o&&this.isValidSaturationValue(e)||"h"===o&&this.isValidHue(e))&&this.updateHSV("h"===o?e:this.currentHSVColor.h,"s"===o?e/100:this.currentHSVColor.s,"v"===o?e/100:this.currentHSVColor.v)}handleChange(){this.$emit("change")}initColorValues(){isNullOrWhiteSpace(this.value)?this.currentRGBColor=new ColorRGBA64(1,0,0,1):this.currentRGBColor=parseColor(this.value),this.currentHSVColor=rgbToHSV(this.currentRGBColor),this.updateUIValues(!1)}isValidRGB(o){return o>=0&&o<=255}isValidAlpha(o){return o>=0&&o<=100}isValidSaturationValue(o){return o>=0&&o<=100}isValidHue(o){return o>=0&&o<=359}isValideCSSColor(o){return this.proxy.style.backgroundColor="",this.proxy.style.backgroundColor=o,""!==this.proxy.style.backgroundColor}updateHSV(o,t,r){this.currentHSVColor=new ColorHSV(o,t,r),this.currentRGBColor=hsvToRGB(this.currentHSVColor,this.currentRGBColor.a),this.updateUIValues(!0)}updateFromMouseEvent(o,t){const r=this.currentMouseTarget.getBoundingClientRect();let e=o-r.left,s=t-r.top;const i=r.width,l=r.height;e>i&&(e=i),s>l&&(s=l),e<0&&(e=0),s<0&&(s=0),"h"===this.currentMouseParam?this.updateHSV(359*e/i,this.currentHSVColor.s,this.currentHSVColor.v):"sv"===this.currentMouseParam?this.updateHSV(this.currentHSVColor.h,Math.round(100*e/i)/100,Math.round(100-100*s/l)/100):"a"===this.currentMouseParam&&(this.currentRGBColor=new ColorRGBA64(this.currentRGBColor.r,this.currentRGBColor.g,this.currentRGBColor.b,Math.round(100*e/i)/100),this.updateUIValues(!0))}updateUIValues(o){this.uiValues=new ColorPickerUI(this.currentRGBColor,this.currentHSVColor),o&&(this.initialValue=1!==this.currentRGBColor.a?this.currentRGBColor.toStringWebRGBA():this.currentRGBColor.toStringHexRGB(),this.$emit("change"))}}__decorate([attr({attribute:"readonly",mode:"boolean"})],ColorPicker.prototype,"readOnly",void 0),__decorate([attr({mode:"boolean"})],ColorPicker.prototype,"autofocus",void 0),__decorate([attr],ColorPicker.prototype,"placeholder",void 0),__decorate([observable],ColorPicker.prototype,"open",void 0),__decorate([observable],ColorPicker.prototype,"mouseActive",void 0),__decorate([observable],ColorPicker.prototype,"uiValues",void 0);
//# sourceMappingURL=/sm/8edd0b4a0db72b14dca43f315ffe463e19a1788773c1a538600825244a0697ad.map