/**
 * Minified by jsDelivr using Terser v5.15.1.
 * Original file: /npm/@fluentui/web-components@2.5.9/dist/esm/card/index.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
import{__decorate}from"tslib";import{composedParent,Card as FoundationCard,cardTemplate as template}from"@microsoft/fast-foundation";import{attr,Observable}from"@microsoft/fast-element";import{parseColorHexRGB}from"@microsoft/fast-colors";import{fillColor,neutralFillLayerRecipe,neutralPalette}from"../design-tokens";import{SwatchRGB}from"../color/swatch";import{PaletteRGB}from"../color/palette";import{cardStyles as styles}from"./card.styles";export class Card extends FoundationCard{cardFillColorChanged(e,t){if(t){const e=parseColorHexRGB(t);null!==e&&(this.neutralPaletteSource=t,fillColor.setValueFor(this,SwatchRGB.create(e.r,e.g,e.b)))}}neutralPaletteSourceChanged(e,t){if(t){const e=parseColorHexRGB(t),r=SwatchRGB.create(e.r,e.g,e.b);neutralPalette.setValueFor(this,PaletteRGB.create(r))}}handleChange(e,t){this.cardFillColor||fillColor.setValueFor(this,(t=>neutralFillLayerRecipe.getValueFor(t).evaluate(t,fillColor.getValueFor(e)).rest))}connectedCallback(){super.connectedCallback();const e=composedParent(this);if(e){const t=Observable.getNotifier(e);t.subscribe(this,"fillColor"),t.subscribe(this,"neutralPalette"),this.handleChange(e,"fillColor")}}}__decorate([attr({attribute:"card-fill-color",mode:"fromView"})],Card.prototype,"cardFillColor",void 0),__decorate([attr({attribute:"neutral-palette-source",mode:"fromView"})],Card.prototype,"neutralPaletteSource",void 0);export const fluentCard=Card.compose({baseName:"card",baseClass:FoundationCard,template:template,styles:styles});export const cardStyles=styles;
//# sourceMappingURL=/sm/319931afac0f11225edfe6dc8f6ea277bca22e953d7e868a739569769f5814dc.map